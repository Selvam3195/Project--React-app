version: 0.2
phases:
  install:
    commands:
  pre_build:
    commands:
      # Update kubeconfig for EKS cluster access
      # This command adds the EKS cluster to the kubeconfig file, allowing kubectl to interact with it.
      - aws eks update-kubeconfig --name ashokit-cluster17 --region ap-south-1
      - kubectl apply -f deployment-reader.yml 
      - kubectl apply -f codebuild-deployment-binding.yml

      # (Optional) If your CodeBuild service role is not already mapped in the aws-auth ConfigMap
      # You might need to update the aws-auth configmap to grant the CodeBuild service role permissions to interact with the EKS cluster.
      # This can be done by adding a mapRoles entry to the aws-auth ConfigMap.
      # However, AWS recommends using EKS Access Entries for managing cluster access for IAM roles and users.
      # If using EKS Access Entries, you would create an Access Entry for your CodeBuild service role with appropriate permissions.
      
      # Example of kubectl commands you might run
  build:
    commands:
      - echo "Build phase complete."
  post_build:
    commands:
      # Your deployment commands using kubectl go here
      # Example: Applying Kubernetes manifest
      - kubectl apply -f deployment.yml
      - kubectl apply -f service.yml
      # Example: Updating an image in an existing deployment
      # - kubectl set image deployment/your-deployment-name your-container-name=your-image-name:latest -n your-namespace
      - echo "Deployment phase complete."


